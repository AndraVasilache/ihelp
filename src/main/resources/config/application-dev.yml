# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.ihelp: DEBUG

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**,.h2.server.properties
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  spring:
    thymeleaf:
      cache: false
#    security:
#      oauth2:
#        client:
#          registration:
#            okta:
#              client-id: 0oa4ys2ifvPh2VsCJ5d7
#              client-secret: zPw-QXhilzihlsXYnRVzaN2AnyJTizZwasucYdkT
##              client-name: ihelp
#              issuer: https://dev-14632418.okta.com/oauth2/default
#              provider: okta
#              http://localhost:8080/login/oauth2/code/okta
#              authorization-grant-type: authorization_code
#          provider:
#            okta:
#              token-uri: http://localhost:8080/auth/oauth/token
#              authorization-uri: http://localhost:8080/auth/oauth/authorize
#              user-info-uri: http://localhost:8080/auth/user/me
#              user-name-attribute: name
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: https://dev-14632418.okta.com/oauth2/default
            jwk-set-uri: https://dev-14632418.okta.com/.well-known/jwks.json
        registration:
          oidc:
            client-id: 0oa4ys2ifvPh2VsCJ5d7
            client-secret: zPw-QXhilzihlsXYnRVzaN2AnyJTizZwasucYdkT
            scope: openid,profile,email
  jackson:
    serialization:
      indent-output: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://localhost:5432/ihelp?useLegacyDatetimeCode=false&serverTimezone=UTC
    username: ihelp
    password: ihelp
    hikari:
      poolName: Hikari
      auto-commit: false
  h2:
    console:
      # disable spring boot built-in h2-console since we start it manually with correct configuration
      enabled: false
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    contexts: dev
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false
  sleuth:
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

server:
  port: 8080


# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins: 'http://localhost:8100,https://localhost:8100,http://localhost:9000,https://localhost:9000,http://localhost:9060,https://localhost:9060'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
